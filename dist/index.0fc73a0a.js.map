{"mappings":";QAAMA,kDAAYC,EAAE;;QACdC,gDAAUF,gDAAUG,KAAK;;;QAEzBC,0CAAIC,aAAaC,QAAQ;QACzBC,gDAAUC,KAAKC,MAAML;;QACrBM,+CAASH;IACXI,MAAM;IAAKC,KAAK;;IAChBD,MAAM;IAAKC,KAAK;;QAEdC,oDAAc,AAACD;WACZA,IAAIE,QAAQ,YAAY,IAC5BA,QAAQ,YAAY,IACpBA,QAAQ,QAAQ;IAChBA,QAAQ,QAAQ;;;QAIfC,+CAAS;;IAEbf,gDAAUG,KAAK,iBAAiBa;;IAChCN,6CAAOO,QAAQ,CAACC,MAAMC;;YAEdC,MAAMnB,GAAG;;4BAESiB,KAAKP,KAAK;4BACVE,kDAAYK,KAAKN,KAAK;;;;;;;;QAQ1CS,aAAanB;;MACjBkB,IAAIE,GAAG,SAAS;QACdC,OAAOC,KAAKN,KAAKN;;MAEnBQ,IAAIE,GAAG,SAAS,UAAU,AAACG;QACzBA,EAAEC;;QACFC,QAAQC,IAAIlB;;QACZA,6CAAOmB,OAAOV,OAAO;;;QAErBJ;;;;EAKNA;;EAGAd,EAAE,cACCqB,GAAG,SAAS;QACPV,MAAMW,OAAOO,OAAO;QACpBlB,IAAImB,QAAQ,YAAY;MAC1BnB,MAAM,aAAaA;;IAErBe,QAAQC,IAAIhB;IACZF,6CAAOsB;MACLrB,MAAME,kDAAYD,KAAK,GAAGqB;MAC1BrB,KAAKA;;;IAGPG;;;EAIJQ,OAAOW,iBAAiB;;UAEhBC,SAAS3B,KAAK4B,UAAU1B;;IAC9BL,aAAagC,QAAQ,KAAKF;;;EAI5BlC,EAAEqC,UAAUhB,GAAG,YAAY,AAACG;WAClBc,OAAQd;aACPe,IAAI,GAAGA,IAAI9B,6CAAO+B,QAAQD;UAC7B9B,6CAAO8B,GAAG7B,KAAK+B,kBAAkBH;QACnChB,OAAOC,KAAKd,6CAAO8B,GAAG5B","sources":["./nav-1/src/main.js"],"sourcesContent":["const $siteList = $('.siteList')//就是那个ul。const $siteList = $('.siteList')//找到这个元素，因为用jQuery找的，前面加$\r\nconst $lastLi = $siteList.find('li.last') //就是ul最后一个li。放到前面了.//要添加一个网站，搞一个div插到siteList里面\r\n//const $lastLi = $siteList.find('li.last')//插入一个卡片，用插值法${},这个$只是jquery的语法\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x) //就可以初始化哈希表了//如果xObject存在就用xObject的数据，如果不存在就····\r\nconst hasMap = xObject || [\r\n  { logo: 'A', url: 'https://www.acfun.cn' },\r\n  { logo: 'B', url: 'https://www.bilibili.com' }]\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url.replace('https://', '')\r\n    .replace('https://', '')\r\n    .replace('www.', '')  //优化site里面那个网址\r\n    .replace(/\\/.*/, '') //删除“/” 后面的内容\r\n}\r\n\r\n//你发现哈希表可以存储这些节点，可以直接在js里储存起来👇👇👇\r\nconst render = () => {\r\n  //这结束之后要重新渲染哈希表，但是之前的A、B网页会复制两遍，所以每次渲染啊都要把之前的删掉\r\n  $siteList.find('li:not(.last)').remove() //找到所有的li除了最后一项\r\n  hasMap.forEach((node, index) => {  //遍历哈希表，foreach会把每一项作为参数告诉你，每一项叫做节点node，\r\n\r\n    const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${node.logo}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class=\"close\">\r\n          <svg class=\"icon\">\r\n            <use xlink:href=\"#icon-close\"></use>\r\n          </svg>\r\n        </div> \r\n      </div>\r\n  </a>\r\n</li>`).insertBefore($lastLi)  //记得添加close之后，css那的site要相对定位，close要绝对定位\r\n    $li.on('click', () => {\r\n      window.open(node.url)  //window.open打开一个新窗口，括号里面是地址\r\n    })\r\n    $li.on('click', '.close', (e) => {\r\n      e.stopPropagation()  //监听close按钮//阻止冒泡，点击不会告诉a标签//但是实践证明跟a标签矛盾了。把a标签删了。\r\n      console.log(hasMap)  //里面那么多网站，想要找到当前点击的那一个，然后删掉。但不知道第几个？在上面node那里（）起来加一个index，拿到索引\r\n      hasMap.splice(index, 1)  //从index那里删掉一个\r\n      //莫得反应？记得重新渲染一下\r\n      render()\r\n    })\r\n  })\r\n}\r\n\r\nrender()\r\n\r\n//刷新之后就没有了，要用数据结构存下来，用哈希表\r\n$('.addButton')\r\n  .on('click', () => {\r\n    let url = window.prompt('请问你要添加的网站是啥？')\r\n    if (url.indexOf('http') !== 0) {\r\n      url = 'https://' + url\r\n    }\r\n    console.log(url)\r\n    hasMap.push({\r\n      logo: simplifyUrl(url)[0].toUpperCase(),\r\n      url: url\r\n    })\r\n    //这结束之后要重新渲染哈希表，但是之前的A、B网页会复制两遍，所以每次渲染啊都要把之前的删掉\r\n    render()\r\n  });\r\n\r\n//页面关闭的时候把哈希表存到local storage里面，但local storage只能存字符串\r\nwindow.onbeforeunload = () => {\r\n  //console.log('页面要关闭了')\r\n  const string = JSON.stringify(hasMap) //把对象变成字符串\r\n  localStorage.setItem('x', string) //()里面要有key跟value，随便给个x\r\n}\r\n//存进去了，就能读\r\n\r\n$(document).on('keypress', (e) => {\r\n  const { key } = e\r\n  for (let i = 0; i < hasMap.length; i++) {\r\n    if (hasMap[i].logo.toLowerCase() === key) {\r\n      window.open(hasMap[i].url)\r\n    }\r\n  }\r\n})"],"names":["$3920c17d9f5276c54162013f7118516f$var$$siteList","$","$3920c17d9f5276c54162013f7118516f$var$$lastLi","find","$3920c17d9f5276c54162013f7118516f$var$x","localStorage","getItem","$3920c17d9f5276c54162013f7118516f$var$xObject","JSON","parse","$3920c17d9f5276c54162013f7118516f$var$hasMap","logo","url","$3920c17d9f5276c54162013f7118516f$var$simplifyUrl","replace","$3920c17d9f5276c54162013f7118516f$var$render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","console","log","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"version":3,"file":"index.0fc73a0a.js.map"}